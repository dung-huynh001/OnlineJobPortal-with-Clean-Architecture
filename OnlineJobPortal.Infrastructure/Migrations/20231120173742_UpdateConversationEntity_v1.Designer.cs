// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OnlineJobPortal.Infrastructure.Context;

#nullable disable

namespace OnlineJobPortal.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20231120173742_UpdateConversationEntity_v1")]
    partial class UpdateConversationEntity_v1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("Roles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("UserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("UserTokens", (string)null);
                });

            modelBuilder.Entity("OnlineJobPortal.Domain.Entities.Admin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("Date");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("NationalId")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("OnlineJobPortal.Domain.Entities.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("UserType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("OnlineJobPortal.Domain.Entities.Apply", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CandidateId")
                        .HasColumnType("int");

                    b.Property<string>("CoverLetter")
                        .HasColumnType("ntext");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CvUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("JobPostId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CandidateId");

                    b.HasIndex("JobPostId");

                    b.ToTable("Applys");
                });

            modelBuilder.Entity("OnlineJobPortal.Domain.Entities.BussinessIndustry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("BussinessName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("BussinessIndustrys");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BussinessName = "Công nghệ thông tin và phần mềm",
                            CreateAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdateAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            BussinessName = "Tài chính và ngân hàng",
                            CreateAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdateAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            BussinessName = "Bất động sản",
                            CreateAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdateAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            BussinessName = "Y tế và chăm sóc sức khỏe",
                            CreateAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdateAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            BussinessName = "Giáo dục và đào tạo",
                            CreateAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdateAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6,
                            BussinessName = "Thương mại điện tử",
                            CreateAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdateAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 7,
                            BussinessName = "Dịch sài vụ tài chính và tư vấn",
                            CreateAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdateAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 8,
                            BussinessName = "Sản xuất và công nghiệp",
                            CreateAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdateAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 9,
                            BussinessName = "Năng lượng và môi trường",
                            CreateAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdateAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 10,
                            BussinessName = "Thực phẩm và đồ uống",
                            CreateAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdateAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 11,
                            BussinessName = "Du lịch và khách sạn",
                            CreateAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdateAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 12,
                            BussinessName = "Xây dựng và kiến trúc",
                            CreateAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdateAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 13,
                            BussinessName = "Thể thao và giải trí",
                            CreateAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdateAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 14,
                            BussinessName = "Truyền thông và quảng cáo",
                            CreateAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdateAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 15,
                            BussinessName = "Vận chuyển và logistics",
                            CreateAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdateAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 16,
                            BussinessName = "Thương mại bán lẻ",
                            CreateAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdateAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 17,
                            BussinessName = "Nông nghiệp và chăn nuôi",
                            CreateAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdateAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 18,
                            BussinessName = "Công nghiệp sáng tạo",
                            CreateAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdateAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 19,
                            BussinessName = "Hóa chất và dược phẩm",
                            CreateAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdateAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 20,
                            BussinessName = "Viễn thông và công nghệ truyền thông",
                            CreateAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdateAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("OnlineJobPortal.Domain.Entities.Candidate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("AvatarUrl")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("Date");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("NationalId")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("ResumeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Candidates");
                });

            modelBuilder.Entity("OnlineJobPortal.Domain.Entities.CandidateSkill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<int>("ResumeId")
                        .HasColumnType("int");

                    b.Property<int>("SkillId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ResumeId");

                    b.HasIndex("SkillId");

                    b.ToTable("CandidateSkills");
                });

            modelBuilder.Entity("OnlineJobPortal.Domain.Entities.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("BussinessIndustryId")
                        .HasColumnType("int");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("ntext");

                    b.Property<int>("DistrictId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("EstablishmentDate")
                        .HasColumnType("Date");

                    b.Property<string>("Facebook")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Hotline")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("LogoUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Owner")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("ProvinceId")
                        .HasColumnType("int");

                    b.Property<string>("Twitter")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("WebsiteUrl")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("BussinessIndustryId");

                    b.HasIndex("DistrictId", "ProvinceId");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("OnlineJobPortal.Domain.Entities.CompanyImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("CompanyImages");
                });

            modelBuilder.Entity("OnlineJobPortal.Domain.Entities.Conversations", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("JobPostId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("JobPostId")
                        .IsUnique();

                    b.ToTable("Conversations");
                });

            modelBuilder.Entity("OnlineJobPortal.Domain.Entities.District", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("ProvinceId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DistrictName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id", "ProvinceId");

                    b.HasIndex("ProvinceId");

                    b.ToTable("Districts");
                });

            modelBuilder.Entity("OnlineJobPortal.Domain.Entities.Education", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CompletionDate")
                        .HasColumnType("Date");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<double>("GPA")
                        .HasColumnType("float");

                    b.Property<string>("Major")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int?>("ResumeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("Date");

                    b.Property<string>("University")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ResumeId");

                    b.ToTable("Educations");
                });

            modelBuilder.Entity("OnlineJobPortal.Domain.Entities.Employer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("AvatarUrl")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("Date");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("NationalId")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Position")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Employers");
                });

            modelBuilder.Entity("OnlineJobPortal.Domain.Entities.Experience", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CompanyName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("ntext");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Position")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("ResumeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ResumeId");

                    b.ToTable("Experiences");
                });

            modelBuilder.Entity("OnlineJobPortal.Domain.Entities.ExperienceProject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ExperienceId")
                        .HasColumnType("int");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ExperienceId");

                    b.ToTable("ExperienceProjects");
                });

            modelBuilder.Entity("OnlineJobPortal.Domain.Entities.ExperienceSkill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("ExperienceId")
                        .HasColumnType("int");

                    b.Property<int>("SkillId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ExperienceId");

                    b.HasIndex("SkillId");

                    b.ToTable("ExperienceSkills");
                });

            modelBuilder.Entity("OnlineJobPortal.Domain.Entities.ForeignLanguage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Degree")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("LanguageName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("ResumeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ResumeId");

                    b.ToTable("ForeignLanguage");
                });

            modelBuilder.Entity("OnlineJobPortal.Domain.Entities.JobFavorite", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CandidateId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("JobPostId")
                        .HasColumnType("int");

                    b.Property<int>("Star")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CandidateId");

                    b.HasIndex("JobPostId");

                    b.ToTable("JobFavorites");
                });

            modelBuilder.Entity("OnlineJobPortal.Domain.Entities.JobPost", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Benefits")
                        .IsRequired()
                        .HasColumnType("ntext");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("ntext");

                    b.Property<int>("DistrictId")
                        .HasColumnType("int");

                    b.Property<int>("EmployerId")
                        .HasColumnType("int");

                    b.Property<int>("EmploymentType")
                        .HasColumnType("int");

                    b.Property<DateTime>("ExpiredDate")
                        .HasColumnType("Date");

                    b.Property<int>("JobTypeId")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfRecruits")
                        .HasColumnType("int");

                    b.Property<int>("ProvinceId")
                        .HasColumnType("int");

                    b.Property<string>("Requirement")
                        .IsRequired()
                        .HasColumnType("ntext");

                    b.Property<string>("Salary")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("YearsOfExperience")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("EmployerId");

                    b.HasIndex("JobTypeId");

                    b.HasIndex("DistrictId", "ProvinceId");

                    b.ToTable("JobPosts");
                });

            modelBuilder.Entity("OnlineJobPortal.Domain.Entities.JobType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("JobTypeIcon")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("JobTypeName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("JobTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 288, DateTimeKind.Local).AddTicks(2750),
                            JobTypeIcon = "fa-laptop-code",
                            JobTypeName = "Web Developer",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 288, DateTimeKind.Local).AddTicks(2761)
                        },
                        new
                        {
                            Id = 2,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 288, DateTimeKind.Local).AddTicks(2763),
                            JobTypeIcon = "fa-mobile-alt",
                            JobTypeName = "Mobile Developer",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 288, DateTimeKind.Local).AddTicks(2763)
                        },
                        new
                        {
                            Id = 3,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 288, DateTimeKind.Local).AddTicks(2764),
                            JobTypeIcon = "fa-check-double",
                            JobTypeName = "QA & QC",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 288, DateTimeKind.Local).AddTicks(2765)
                        },
                        new
                        {
                            Id = 4,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 288, DateTimeKind.Local).AddTicks(2766),
                            JobTypeIcon = "fa-chart-pie",
                            JobTypeName = "Business Analysis",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 288, DateTimeKind.Local).AddTicks(2766)
                        },
                        new
                        {
                            Id = 5,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 288, DateTimeKind.Local).AddTicks(2767),
                            JobTypeIcon = "fa-user-shield",
                            JobTypeName = "Tester",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 288, DateTimeKind.Local).AddTicks(2768)
                        },
                        new
                        {
                            Id = 6,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 288, DateTimeKind.Local).AddTicks(2770),
                            JobTypeIcon = "fa-wifi",
                            JobTypeName = "Internet of things(IoT)",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 288, DateTimeKind.Local).AddTicks(2770)
                        },
                        new
                        {
                            Id = 7,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 288, DateTimeKind.Local).AddTicks(2771),
                            JobTypeIcon = "fa-tasks",
                            JobTypeName = "Project Management",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 288, DateTimeKind.Local).AddTicks(2772)
                        },
                        new
                        {
                            Id = 8,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 288, DateTimeKind.Local).AddTicks(2772),
                            JobTypeIcon = "fa-users",
                            JobTypeName = "Human Resource",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 288, DateTimeKind.Local).AddTicks(2773)
                        },
                        new
                        {
                            Id = 9,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 288, DateTimeKind.Local).AddTicks(2774),
                            JobTypeIcon = "fa-paint-brush",
                            JobTypeName = "Design & Creative",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 288, DateTimeKind.Local).AddTicks(2774)
                        },
                        new
                        {
                            Id = 10,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 288, DateTimeKind.Local).AddTicks(2776),
                            JobTypeIcon = "fa-server",
                            JobTypeName = "System Admin",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 288, DateTimeKind.Local).AddTicks(2776)
                        },
                        new
                        {
                            Id = 11,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 288, DateTimeKind.Local).AddTicks(2777),
                            JobTypeIcon = "fa-cogs",
                            JobTypeName = "DevOps",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 288, DateTimeKind.Local).AddTicks(2778)
                        },
                        new
                        {
                            Id = 12,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 288, DateTimeKind.Local).AddTicks(2778),
                            JobTypeIcon = "fa-shield-alt",
                            JobTypeName = "System Security",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 288, DateTimeKind.Local).AddTicks(2779)
                        },
                        new
                        {
                            Id = 13,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 288, DateTimeKind.Local).AddTicks(2780),
                            JobTypeIcon = "fa-headset",
                            JobTypeName = "IT Support",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 288, DateTimeKind.Local).AddTicks(2780)
                        },
                        new
                        {
                            Id = 14,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 288, DateTimeKind.Local).AddTicks(2781),
                            JobTypeIcon = "fa-circle-question",
                            JobTypeName = "IT Helpdesk",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 288, DateTimeKind.Local).AddTicks(2782)
                        },
                        new
                        {
                            Id = 15,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 288, DateTimeKind.Local).AddTicks(2783),
                            JobTypeIcon = "fa-code",
                            JobTypeName = "Frontend Developer",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 288, DateTimeKind.Local).AddTicks(2783)
                        },
                        new
                        {
                            Id = 16,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 288, DateTimeKind.Local).AddTicks(2784),
                            JobTypeIcon = "fa-database",
                            JobTypeName = "Backend Developer",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 288, DateTimeKind.Local).AddTicks(2784)
                        },
                        new
                        {
                            Id = 17,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 288, DateTimeKind.Local).AddTicks(2785),
                            JobTypeIcon = "fa-layer-group",
                            JobTypeName = "Fullstack Developer",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 288, DateTimeKind.Local).AddTicks(2786)
                        });
                });

            modelBuilder.Entity("OnlineJobPortal.Domain.Entities.Message", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("CandidateId")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ConversationId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EmployerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("CandidateId");

                    b.HasIndex("ConversationId");

                    b.HasIndex("EmployerId");

                    b.HasIndex("UserId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("OnlineJobPortal.Domain.Entities.Notification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsRead")
                        .HasColumnType("bit");

                    b.Property<int>("ResourceId")
                        .HasColumnType("int");

                    b.Property<string>("ResourceName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("OnlineJobPortal.Domain.Entities.Participation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ConversationId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("ConversationId");

                    b.HasIndex("UserId");

                    b.ToTable("Participations");
                });

            modelBuilder.Entity("OnlineJobPortal.Domain.Entities.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("ntext");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LinkGit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ResumeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ResumeId");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("OnlineJobPortal.Domain.Entities.Province", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProvinceName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Provinces");
                });

            modelBuilder.Entity("OnlineJobPortal.Domain.Entities.RequirementSkill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("JobPostId")
                        .HasColumnType("int");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<int>("SkillId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("JobPostId");

                    b.HasIndex("SkillId");

                    b.ToTable("RequirementSkills");
                });

            modelBuilder.Entity("OnlineJobPortal.Domain.Entities.Resume", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CandidateId")
                        .HasColumnType("int");

                    b.Property<string>("CareerGoal")
                        .HasColumnType("ntext");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CvUrl")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("JobSearchMode")
                        .HasColumnType("bit");

                    b.Property<string>("Position")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Title")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("YearOfExperiences")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("CandidateId")
                        .IsUnique();

                    b.ToTable("Resumes");
                });

            modelBuilder.Entity("OnlineJobPortal.Domain.Entities.Skill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("SkillName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Skills");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(360),
                            SkillName = "Java",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(364)
                        },
                        new
                        {
                            Id = 2,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(366),
                            SkillName = "C#",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(367)
                        },
                        new
                        {
                            Id = 3,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(368),
                            SkillName = "Python",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(368)
                        },
                        new
                        {
                            Id = 4,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(369),
                            SkillName = "JavaScript",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(369)
                        },
                        new
                        {
                            Id = 5,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(370),
                            SkillName = "SQL",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(371)
                        },
                        new
                        {
                            Id = 6,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(372),
                            SkillName = "HTML/CSS",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(372)
                        },
                        new
                        {
                            Id = 7,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(373),
                            SkillName = "React",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(374)
                        },
                        new
                        {
                            Id = 8,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(374),
                            SkillName = "Angular",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(375)
                        },
                        new
                        {
                            Id = 9,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(375),
                            SkillName = "Node.js",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(376)
                        },
                        new
                        {
                            Id = 10,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(377),
                            SkillName = "AWS",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(378)
                        },
                        new
                        {
                            Id = 11,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(379),
                            SkillName = "Docker",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(379)
                        },
                        new
                        {
                            Id = 12,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(380),
                            SkillName = "Ruby",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(380)
                        },
                        new
                        {
                            Id = 13,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(381),
                            SkillName = "Swift",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(382)
                        },
                        new
                        {
                            Id = 14,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(382),
                            SkillName = "PHP",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(383)
                        },
                        new
                        {
                            Id = 15,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(384),
                            SkillName = "Kotlin",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(384)
                        },
                        new
                        {
                            Id = 16,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(385),
                            SkillName = "C++",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(385)
                        },
                        new
                        {
                            Id = 17,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(386),
                            SkillName = "Spring Framework",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(386)
                        },
                        new
                        {
                            Id = 18,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(388),
                            SkillName = ".NET",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(388)
                        },
                        new
                        {
                            Id = 19,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(389),
                            SkillName = "ASP.NET",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(389)
                        },
                        new
                        {
                            Id = 20,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(390),
                            SkillName = "Ruby on Rails",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(391)
                        },
                        new
                        {
                            Id = 21,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(391),
                            SkillName = "Git",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(392)
                        },
                        new
                        {
                            Id = 22,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(392),
                            SkillName = "Linux",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(393)
                        },
                        new
                        {
                            Id = 23,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(393),
                            SkillName = "Android Development",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(394)
                        },
                        new
                        {
                            Id = 24,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(395),
                            SkillName = "iOS Development",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(395)
                        },
                        new
                        {
                            Id = 25,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(396),
                            SkillName = "Machine Learning",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(396)
                        },
                        new
                        {
                            Id = 26,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(397),
                            SkillName = "Data Science",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(397)
                        },
                        new
                        {
                            Id = 27,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(398),
                            SkillName = "Cybersecurity",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(399)
                        },
                        new
                        {
                            Id = 28,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(399),
                            SkillName = "Networking",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(400)
                        },
                        new
                        {
                            Id = 29,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(400),
                            SkillName = "Cloud Computing",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(401)
                        },
                        new
                        {
                            Id = 30,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(402),
                            SkillName = "Big Data",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(402)
                        },
                        new
                        {
                            Id = 31,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(403),
                            SkillName = "DevOps",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(403)
                        },
                        new
                        {
                            Id = 32,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(404),
                            SkillName = "Agile/Scrum",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(404)
                        },
                        new
                        {
                            Id = 33,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(405),
                            SkillName = "UI/UX Design",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(405)
                        },
                        new
                        {
                            Id = 34,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(407),
                            SkillName = "Blockchain",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(407)
                        },
                        new
                        {
                            Id = 35,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(408),
                            SkillName = "IoT (Internet of Things)",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(408)
                        },
                        new
                        {
                            Id = 36,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(409),
                            SkillName = "Game Development",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(410)
                        },
                        new
                        {
                            Id = 37,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(410),
                            SkillName = "Front-end Development",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(411)
                        },
                        new
                        {
                            Id = 38,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(412),
                            SkillName = "Back-end Development",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(412)
                        },
                        new
                        {
                            Id = 39,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(413),
                            SkillName = "Full-stack Development",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(413)
                        },
                        new
                        {
                            Id = 40,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(414),
                            SkillName = "Database Management",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(414)
                        },
                        new
                        {
                            Id = 41,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(415),
                            SkillName = "Cloud Architecture",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(415)
                        },
                        new
                        {
                            Id = 42,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(416),
                            SkillName = "React Native",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(417)
                        },
                        new
                        {
                            Id = 43,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(417),
                            SkillName = "Flutter",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(418)
                        },
                        new
                        {
                            Id = 44,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(418),
                            SkillName = "ASP.NET Core",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(419)
                        },
                        new
                        {
                            Id = 45,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(420),
                            SkillName = "Vue.js",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(420)
                        },
                        new
                        {
                            Id = 46,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(421),
                            SkillName = "TypeScript",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(421)
                        },
                        new
                        {
                            Id = 47,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(422),
                            SkillName = "Ruby on Rails",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(422)
                        },
                        new
                        {
                            Id = 48,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(423),
                            SkillName = "Express.js",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(423)
                        },
                        new
                        {
                            Id = 49,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(424),
                            SkillName = "GraphQL",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(425)
                        },
                        new
                        {
                            Id = 50,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(425),
                            SkillName = "Rust",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(426)
                        },
                        new
                        {
                            Id = 51,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(427),
                            SkillName = "Scala",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(427)
                        },
                        new
                        {
                            Id = 52,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(428),
                            SkillName = "Objective-C",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(428)
                        },
                        new
                        {
                            Id = 53,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(429),
                            SkillName = "Redux",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(429)
                        },
                        new
                        {
                            Id = 54,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(430),
                            SkillName = "Node.js",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(430)
                        },
                        new
                        {
                            Id = 55,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(431),
                            SkillName = "Nginx",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(432)
                        },
                        new
                        {
                            Id = 56,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(432),
                            SkillName = "Apache",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(433)
                        },
                        new
                        {
                            Id = 57,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(433),
                            SkillName = "Ruby on Rails",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(434)
                        },
                        new
                        {
                            Id = 58,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(435),
                            SkillName = "DevOps",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(435)
                        },
                        new
                        {
                            Id = 59,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(436),
                            SkillName = "Continuous Integration/Continuous Deployment (CI/CD)",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(436)
                        },
                        new
                        {
                            Id = 60,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(437),
                            SkillName = "Web Security",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(437)
                        },
                        new
                        {
                            Id = 61,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(444),
                            SkillName = "Linux System Administration",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(444)
                        },
                        new
                        {
                            Id = 62,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(445),
                            SkillName = "Microsoft Azure",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(445)
                        },
                        new
                        {
                            Id = 63,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(446),
                            SkillName = "Google Cloud Platform (GCP)",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(446)
                        },
                        new
                        {
                            Id = 64,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(447),
                            SkillName = "Amazon Web Services (AWS)",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(448)
                        },
                        new
                        {
                            Id = 65,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(448),
                            SkillName = "Unity3D",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(449)
                        },
                        new
                        {
                            Id = 66,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(450),
                            SkillName = "WebAssembly",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(450)
                        },
                        new
                        {
                            Id = 67,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(451),
                            SkillName = "Embedded Systems",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(452)
                        },
                        new
                        {
                            Id = 68,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(452),
                            SkillName = "AR/VR Development",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(453)
                        },
                        new
                        {
                            Id = 69,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(453),
                            SkillName = "Natural Language Processing (NLP)",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(454)
                        },
                        new
                        {
                            Id = 70,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(454),
                            SkillName = "Robotics",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(455)
                        },
                        new
                        {
                            Id = 71,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(456),
                            SkillName = "TensorFlow",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(456)
                        },
                        new
                        {
                            Id = 72,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(457),
                            SkillName = "Vue.js",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(457)
                        },
                        new
                        {
                            Id = 73,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(458),
                            SkillName = "Electron",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(459)
                        },
                        new
                        {
                            Id = 74,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(459),
                            SkillName = "Hadoop",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(460)
                        },
                        new
                        {
                            Id = 75,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(460),
                            SkillName = "Spark",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(461)
                        },
                        new
                        {
                            Id = 76,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(462),
                            SkillName = "Red Hat Enterprise Linux",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(462)
                        },
                        new
                        {
                            Id = 77,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(463),
                            SkillName = "SAS",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(463)
                        },
                        new
                        {
                            Id = 78,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(464),
                            SkillName = "MATLAB",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(464)
                        },
                        new
                        {
                            Id = 79,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(465),
                            SkillName = "Adobe Creative Suite",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(465)
                        },
                        new
                        {
                            Id = 80,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(466),
                            SkillName = "AutoCAD",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(467)
                        },
                        new
                        {
                            Id = 81,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(467),
                            SkillName = "Blender",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(468)
                        },
                        new
                        {
                            Id = 82,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(468),
                            SkillName = "SolidWorks",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(469)
                        },
                        new
                        {
                            Id = 83,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(470),
                            SkillName = "Selenium",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(470)
                        },
                        new
                        {
                            Id = 84,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(471),
                            SkillName = "Load Testing",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(471)
                        },
                        new
                        {
                            Id = 85,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(472),
                            SkillName = "Windows Server",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(472)
                        },
                        new
                        {
                            Id = 86,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(473),
                            SkillName = "Objective-C",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(473)
                        },
                        new
                        {
                            Id = 87,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(474),
                            SkillName = "Swift",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(475)
                        },
                        new
                        {
                            Id = 88,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(475),
                            SkillName = "WatchOS",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(476)
                        },
                        new
                        {
                            Id = 89,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(476),
                            SkillName = "tvOS",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(477)
                        },
                        new
                        {
                            Id = 90,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(478),
                            SkillName = "ARKit",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(478)
                        },
                        new
                        {
                            Id = 91,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(479),
                            SkillName = "CoreML",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(479)
                        },
                        new
                        {
                            Id = 92,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(480),
                            SkillName = "Xamarin",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(480)
                        },
                        new
                        {
                            Id = 93,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(481),
                            SkillName = "Reactive Native",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(481)
                        },
                        new
                        {
                            Id = 94,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(482),
                            SkillName = "WebAssembly",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(483)
                        },
                        new
                        {
                            Id = 95,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(483),
                            SkillName = "SwiftUI",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(484)
                        },
                        new
                        {
                            Id = 96,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(484),
                            SkillName = "Angular Material",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(485)
                        },
                        new
                        {
                            Id = 97,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(486),
                            SkillName = "Google Material Design",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(486)
                        },
                        new
                        {
                            Id = 98,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(487),
                            SkillName = "Responsive Web Design",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(487)
                        },
                        new
                        {
                            Id = 99,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(488),
                            SkillName = "Web Accessibility",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(488)
                        },
                        new
                        {
                            Id = 100,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(489),
                            SkillName = "Performance Optimization",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(489)
                        },
                        new
                        {
                            Id = 101,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(490),
                            SkillName = "Content Management Systems (CMS)",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(491)
                        },
                        new
                        {
                            Id = 102,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(491),
                            SkillName = "Joomla",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(492)
                        },
                        new
                        {
                            Id = 103,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(492),
                            SkillName = "Drupal",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(493)
                        },
                        new
                        {
                            Id = 104,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(493),
                            SkillName = "Adobe Experience Manager (AEM)",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(494)
                        },
                        new
                        {
                            Id = 105,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(495),
                            SkillName = "Sitecore",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(495)
                        },
                        new
                        {
                            Id = 106,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(496),
                            SkillName = "Umbraco",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(496)
                        },
                        new
                        {
                            Id = 107,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(497),
                            SkillName = "ERP Systems",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(498)
                        },
                        new
                        {
                            Id = 108,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(498),
                            SkillName = "SAP",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(499)
                        },
                        new
                        {
                            Id = 109,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(499),
                            SkillName = "Oracle E-Business Suite",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(500)
                        },
                        new
                        {
                            Id = 110,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(500),
                            SkillName = "Microsoft Dynamics",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(501)
                        },
                        new
                        {
                            Id = 111,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(502),
                            SkillName = "CRM Systems",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(502)
                        },
                        new
                        {
                            Id = 112,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(503),
                            SkillName = "Salesforce",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(503)
                        },
                        new
                        {
                            Id = 113,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(504),
                            SkillName = "HubSpot",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(504)
                        },
                        new
                        {
                            Id = 114,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(505),
                            SkillName = "Marketo",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(506)
                        },
                        new
                        {
                            Id = 115,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(506),
                            SkillName = "Eloqua",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(507)
                        },
                        new
                        {
                            Id = 116,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(507),
                            SkillName = "Email Marketing",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(508)
                        },
                        new
                        {
                            Id = 117,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(508),
                            SkillName = "Marketing Automation",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(509)
                        },
                        new
                        {
                            Id = 118,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(510),
                            SkillName = "Google Analytics",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(510)
                        },
                        new
                        {
                            Id = 119,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(511),
                            SkillName = "Google Ads",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(511)
                        },
                        new
                        {
                            Id = 120,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(512),
                            SkillName = "Facebook Ads",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(512)
                        },
                        new
                        {
                            Id = 121,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(513),
                            SkillName = "LinkedIn Ads",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(514)
                        },
                        new
                        {
                            Id = 122,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(514),
                            SkillName = "Twitter Ads",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(515)
                        },
                        new
                        {
                            Id = 123,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(515),
                            SkillName = "Social Media Marketing",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(516)
                        },
                        new
                        {
                            Id = 124,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(516),
                            SkillName = "Content Marketing",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(517)
                        },
                        new
                        {
                            Id = 125,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(518),
                            SkillName = "Search Engine Optimization (SEO)",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(518)
                        },
                        new
                        {
                            Id = 126,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(519),
                            SkillName = "Search Engine Marketing (SEM)",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(519)
                        },
                        new
                        {
                            Id = 127,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(520),
                            SkillName = "Pay-Per-Click (PPC)",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(520)
                        },
                        new
                        {
                            Id = 128,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(521),
                            SkillName = "Affiliate Marketing",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(522)
                        },
                        new
                        {
                            Id = 129,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(522),
                            SkillName = "Influencer Marketing",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(523)
                        },
                        new
                        {
                            Id = 130,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(524),
                            SkillName = "Conversion Rate Optimization (CRO)",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(525)
                        },
                        new
                        {
                            Id = 131,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(531),
                            SkillName = "Copywriting",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(531)
                        },
                        new
                        {
                            Id = 132,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(532),
                            SkillName = "Video Production",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(533)
                        },
                        new
                        {
                            Id = 133,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(533),
                            SkillName = "Podcast Production",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(534)
                        },
                        new
                        {
                            Id = 134,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(535),
                            SkillName = "Public Relations (PR)",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(535)
                        },
                        new
                        {
                            Id = 135,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(536),
                            SkillName = "Event Marketing",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(536)
                        },
                        new
                        {
                            Id = 136,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(537),
                            SkillName = "Trade Show Management",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(537)
                        },
                        new
                        {
                            Id = 137,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(538),
                            SkillName = "Market Research",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(538)
                        },
                        new
                        {
                            Id = 138,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(539),
                            SkillName = "Competitive Analysis",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(540)
                        },
                        new
                        {
                            Id = 139,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(540),
                            SkillName = "Market Segmentation",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(541)
                        },
                        new
                        {
                            Id = 140,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(541),
                            SkillName = "Product Launch",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(542)
                        },
                        new
                        {
                            Id = 141,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(543),
                            SkillName = "Brand Strategy",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(543)
                        },
                        new
                        {
                            Id = 142,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(544),
                            SkillName = "Brand Management",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(544)
                        },
                        new
                        {
                            Id = 143,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(545),
                            SkillName = "Crisis Management",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(545)
                        },
                        new
                        {
                            Id = 144,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(546),
                            SkillName = "Customer Relationship Management (CRM)",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(546)
                        },
                        new
                        {
                            Id = 145,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(547),
                            SkillName = "Customer Success",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(548)
                        },
                        new
                        {
                            Id = 146,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(548),
                            SkillName = "Customer Support",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(549)
                        },
                        new
                        {
                            Id = 147,
                            CreateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(549),
                            SkillName = "Customer Feedback Analysis",
                            UpdateAt = new DateTime(2023, 11, 21, 0, 37, 42, 291, DateTimeKind.Local).AddTicks(550)
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("OnlineJobPortal.Domain.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("OnlineJobPortal.Domain.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OnlineJobPortal.Domain.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("OnlineJobPortal.Domain.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OnlineJobPortal.Domain.Entities.Admin", b =>
                {
                    b.HasOne("OnlineJobPortal.Domain.Entities.ApplicationUser", "User")
                        .WithOne()
                        .HasForeignKey("OnlineJobPortal.Domain.Entities.Admin", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("OnlineJobPortal.Domain.Entities.Apply", b =>
                {
                    b.HasOne("OnlineJobPortal.Domain.Entities.Candidate", "Candidate")
                        .WithMany("Applies")
                        .HasForeignKey("CandidateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OnlineJobPortal.Domain.Entities.JobPost", "JobPost")
                        .WithMany("Applications")
                        .HasForeignKey("JobPostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Candidate");

                    b.Navigation("JobPost");
                });

            modelBuilder.Entity("OnlineJobPortal.Domain.Entities.Candidate", b =>
                {
                    b.HasOne("OnlineJobPortal.Domain.Entities.ApplicationUser", "User")
                        .WithOne()
                        .HasForeignKey("OnlineJobPortal.Domain.Entities.Candidate", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("OnlineJobPortal.Domain.Entities.CandidateSkill", b =>
                {
                    b.HasOne("OnlineJobPortal.Domain.Entities.Resume", "Resume")
                        .WithMany("CandidateSkills")
                        .HasForeignKey("ResumeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OnlineJobPortal.Domain.Entities.Skill", "Skill")
                        .WithMany("CandidateSkills")
                        .HasForeignKey("SkillId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Resume");

                    b.Navigation("Skill");
                });

            modelBuilder.Entity("OnlineJobPortal.Domain.Entities.Company", b =>
                {
                    b.HasOne("OnlineJobPortal.Domain.Entities.BussinessIndustry", "BussinessIndustry")
                        .WithMany("Companies")
                        .HasForeignKey("BussinessIndustryId");

                    b.HasOne("OnlineJobPortal.Domain.Entities.District", "District")
                        .WithMany("Companies")
                        .HasForeignKey("DistrictId", "ProvinceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BussinessIndustry");

                    b.Navigation("District");
                });

            modelBuilder.Entity("OnlineJobPortal.Domain.Entities.CompanyImage", b =>
                {
                    b.HasOne("OnlineJobPortal.Domain.Entities.Company", "Company")
                        .WithMany("CompanyImages")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("OnlineJobPortal.Domain.Entities.Conversations", b =>
                {
                    b.HasOne("OnlineJobPortal.Domain.Entities.JobPost", "JobPost")
                        .WithOne("Conversations")
                        .HasForeignKey("OnlineJobPortal.Domain.Entities.Conversations", "JobPostId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("JobPost");
                });

            modelBuilder.Entity("OnlineJobPortal.Domain.Entities.District", b =>
                {
                    b.HasOne("OnlineJobPortal.Domain.Entities.Province", "Province")
                        .WithMany("Districts")
                        .HasForeignKey("ProvinceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Province");
                });

            modelBuilder.Entity("OnlineJobPortal.Domain.Entities.Education", b =>
                {
                    b.HasOne("OnlineJobPortal.Domain.Entities.Resume", "Resume")
                        .WithMany("Educations")
                        .HasForeignKey("ResumeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Resume");
                });

            modelBuilder.Entity("OnlineJobPortal.Domain.Entities.Employer", b =>
                {
                    b.HasOne("OnlineJobPortal.Domain.Entities.Company", "Company")
                        .WithMany("Employers")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("OnlineJobPortal.Domain.Entities.ApplicationUser", "User")
                        .WithOne()
                        .HasForeignKey("OnlineJobPortal.Domain.Entities.Employer", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");

                    b.Navigation("User");
                });

            modelBuilder.Entity("OnlineJobPortal.Domain.Entities.Experience", b =>
                {
                    b.HasOne("OnlineJobPortal.Domain.Entities.Resume", "Resume")
                        .WithMany("Experiences")
                        .HasForeignKey("ResumeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Resume");
                });

            modelBuilder.Entity("OnlineJobPortal.Domain.Entities.ExperienceProject", b =>
                {
                    b.HasOne("OnlineJobPortal.Domain.Entities.Experience", "Experience")
                        .WithMany("ExperienceProjects")
                        .HasForeignKey("ExperienceId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Experience");
                });

            modelBuilder.Entity("OnlineJobPortal.Domain.Entities.ExperienceSkill", b =>
                {
                    b.HasOne("OnlineJobPortal.Domain.Entities.Experience", "Experience")
                        .WithMany("ExperienceSkills")
                        .HasForeignKey("ExperienceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OnlineJobPortal.Domain.Entities.Skill", "Skill")
                        .WithMany("ExperienceSkills")
                        .HasForeignKey("SkillId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Experience");

                    b.Navigation("Skill");
                });

            modelBuilder.Entity("OnlineJobPortal.Domain.Entities.ForeignLanguage", b =>
                {
                    b.HasOne("OnlineJobPortal.Domain.Entities.Resume", "Resume")
                        .WithMany("ForeignLanguages")
                        .HasForeignKey("ResumeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Resume");
                });

            modelBuilder.Entity("OnlineJobPortal.Domain.Entities.JobFavorite", b =>
                {
                    b.HasOne("OnlineJobPortal.Domain.Entities.Candidate", "Candidate")
                        .WithMany("JobFavorites")
                        .HasForeignKey("CandidateId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("OnlineJobPortal.Domain.Entities.JobPost", "JobPost")
                        .WithMany("JobFavorites")
                        .HasForeignKey("JobPostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Candidate");

                    b.Navigation("JobPost");
                });

            modelBuilder.Entity("OnlineJobPortal.Domain.Entities.JobPost", b =>
                {
                    b.HasOne("OnlineJobPortal.Domain.Entities.Employer", "Employer")
                        .WithMany("JobPosts")
                        .HasForeignKey("EmployerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("OnlineJobPortal.Domain.Entities.JobType", "JobType")
                        .WithMany("JobPost")
                        .HasForeignKey("JobTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("OnlineJobPortal.Domain.Entities.District", "District")
                        .WithMany("JobPosts")
                        .HasForeignKey("DistrictId", "ProvinceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("District");

                    b.Navigation("Employer");

                    b.Navigation("JobType");
                });

            modelBuilder.Entity("OnlineJobPortal.Domain.Entities.Message", b =>
                {
                    b.HasOne("OnlineJobPortal.Domain.Entities.Candidate", null)
                        .WithMany("Messages")
                        .HasForeignKey("CandidateId");

                    b.HasOne("OnlineJobPortal.Domain.Entities.Conversations", "Conversation")
                        .WithMany("Messages")
                        .HasForeignKey("ConversationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OnlineJobPortal.Domain.Entities.Employer", null)
                        .WithMany("Messages")
                        .HasForeignKey("EmployerId");

                    b.HasOne("OnlineJobPortal.Domain.Entities.ApplicationUser", "User")
                        .WithMany("Messages")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Conversation");

                    b.Navigation("User");
                });

            modelBuilder.Entity("OnlineJobPortal.Domain.Entities.Notification", b =>
                {
                    b.HasOne("OnlineJobPortal.Domain.Entities.ApplicationUser", "User")
                        .WithMany("Notifications")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("OnlineJobPortal.Domain.Entities.Participation", b =>
                {
                    b.HasOne("OnlineJobPortal.Domain.Entities.Conversations", "Conversations")
                        .WithMany("Participations")
                        .HasForeignKey("ConversationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OnlineJobPortal.Domain.Entities.ApplicationUser", "User")
                        .WithMany("Participations")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Conversations");

                    b.Navigation("User");
                });

            modelBuilder.Entity("OnlineJobPortal.Domain.Entities.Project", b =>
                {
                    b.HasOne("OnlineJobPortal.Domain.Entities.Resume", "Resume")
                        .WithMany("Project")
                        .HasForeignKey("ResumeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Resume");
                });

            modelBuilder.Entity("OnlineJobPortal.Domain.Entities.RequirementSkill", b =>
                {
                    b.HasOne("OnlineJobPortal.Domain.Entities.JobPost", "JobPost")
                        .WithMany("RequirementSkills")
                        .HasForeignKey("JobPostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OnlineJobPortal.Domain.Entities.Skill", "Skill")
                        .WithMany("RequirementSkills")
                        .HasForeignKey("SkillId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("JobPost");

                    b.Navigation("Skill");
                });

            modelBuilder.Entity("OnlineJobPortal.Domain.Entities.Resume", b =>
                {
                    b.HasOne("OnlineJobPortal.Domain.Entities.Candidate", "Candidate")
                        .WithOne("Resume")
                        .HasForeignKey("OnlineJobPortal.Domain.Entities.Resume", "CandidateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Candidate");
                });

            modelBuilder.Entity("OnlineJobPortal.Domain.Entities.ApplicationUser", b =>
                {
                    b.Navigation("Messages");

                    b.Navigation("Notifications");

                    b.Navigation("Participations");
                });

            modelBuilder.Entity("OnlineJobPortal.Domain.Entities.BussinessIndustry", b =>
                {
                    b.Navigation("Companies");
                });

            modelBuilder.Entity("OnlineJobPortal.Domain.Entities.Candidate", b =>
                {
                    b.Navigation("Applies");

                    b.Navigation("JobFavorites");

                    b.Navigation("Messages");

                    b.Navigation("Resume");
                });

            modelBuilder.Entity("OnlineJobPortal.Domain.Entities.Company", b =>
                {
                    b.Navigation("CompanyImages");

                    b.Navigation("Employers");
                });

            modelBuilder.Entity("OnlineJobPortal.Domain.Entities.Conversations", b =>
                {
                    b.Navigation("Messages");

                    b.Navigation("Participations");
                });

            modelBuilder.Entity("OnlineJobPortal.Domain.Entities.District", b =>
                {
                    b.Navigation("Companies");

                    b.Navigation("JobPosts");
                });

            modelBuilder.Entity("OnlineJobPortal.Domain.Entities.Employer", b =>
                {
                    b.Navigation("JobPosts");

                    b.Navigation("Messages");
                });

            modelBuilder.Entity("OnlineJobPortal.Domain.Entities.Experience", b =>
                {
                    b.Navigation("ExperienceProjects");

                    b.Navigation("ExperienceSkills");
                });

            modelBuilder.Entity("OnlineJobPortal.Domain.Entities.JobPost", b =>
                {
                    b.Navigation("Applications");

                    b.Navigation("Conversations");

                    b.Navigation("JobFavorites");

                    b.Navigation("RequirementSkills");
                });

            modelBuilder.Entity("OnlineJobPortal.Domain.Entities.JobType", b =>
                {
                    b.Navigation("JobPost");
                });

            modelBuilder.Entity("OnlineJobPortal.Domain.Entities.Province", b =>
                {
                    b.Navigation("Districts");
                });

            modelBuilder.Entity("OnlineJobPortal.Domain.Entities.Resume", b =>
                {
                    b.Navigation("CandidateSkills");

                    b.Navigation("Educations");

                    b.Navigation("Experiences");

                    b.Navigation("ForeignLanguages");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("OnlineJobPortal.Domain.Entities.Skill", b =>
                {
                    b.Navigation("CandidateSkills");

                    b.Navigation("ExperienceSkills");

                    b.Navigation("RequirementSkills");
                });
#pragma warning restore 612, 618
        }
    }
}
