<link rel="stylesheet" href="~/area/assets/plugins/bootstrap/css/bootstrap-icons/font/bootstrap-icons.min.css">
<link rel="stylesheet" href="~/css/ChatPage/chat.css">
<style>
    .overlay {
        position: absolute;
        display: flex;
        justify-content: center;
        align-items: center;
        overflow: hidden;
        background: linear-gradient(150deg, rgba(0, 0, 0, 0.2), rgba(0, 0, 0, .6)), url('../../img/chat-4.jpg');
        background-size: cover;
        background-position: center center;
        background-repeat: no-repeat;
        top: -14px;
        left: -12px;
        width: 105%;
        height: calc(100% + 10px);
        border-radius: 5px;
    }
</style>

<div class="container-fluid">
    <div class="row">
        <div class="col-5 col-sm-4 border-end position-relative overflow-auto" style="height: calc(75vh + 75px)">
            <div class="d-flex flex-column overflow-auto p-3 gap-3">
                <div class="d-flex justify-content-between align-items-baseline">
                    <h5 class="d-sm-block d-none">Chat</h5>
                    <a role="button" class="btn btn-square rounded-pill fs-5" style="background-color: #e4e6ed;"
                        data-bs-toggle="collapse" data-bs-target="#find-recipient" aria-expanded="false"
                        aria-controls="find-recipient">
                        <i class="fa-regular fa-pen-to-square"></i>
                    </a>
                    <div class="collapse position-absolute start-100" id="find-recipient">
                        <div class="d-flex flex-column p-3 shadow-sm border-3 rounded-3"
                            style="width: 300px; height: 300px; background-color: #fafafa;">
                            <div class="d-flex align-items-baseline gap-3">
                                <label class="form-label">Đến:</label>
                                <input type="text" class="form-control rounded-pill ">
                            </div>
                        </div>
                    </div>
                </div>
                <div class="position-relative">
                    <input class="form-control rounded-pill ps-5" type="text" id="search-recipient"
                        style="background-color: #e4e6ed;" placeholder="Tìm kiếm người dùng">
                    <span class="position-absolute top-50 translate-middle" style="left: 1.5rem">
                        <i class="fa-solid fa-magnifying-glass"></i>
                    </span>
                </div>
                <div class="d-flex flex-column gap-2" id="recipient-container"></div>
            </div>
        </div>
        <div class="col-7 col-sm-8">
            <div class="position-relative">
                <div id="chat-section" class="w-100">
                    <div class="d-flex align-items-center gap-3 shadow-sm px-3 py-2 position-absolute bg-white"
                        style="width: 103%; top: -10px; left: -11px;">
                        <div class="position-relative">
                            <img id="recipient-image" class="rounded-pill" src="~/img/about-1.jpg" alt=""
                                style="width: 45px; height: 45px; object-fit: fill;">
                            <span class="position-absolute bg-primary rounded-pill bottom-0"
                                style="width: 15px; height: 15px; border: 2px solid #fff; right: 0;"></span>
                        </div>
                        <div class="flex-grow-1" style="font-size: 1.1rem">
                            <p id="recipient-name" class="m-0 fw-bold">Hai Nguyen</p>
                            <p class="m-0" style="font-size: .8rem;">Đang hoạt động</p>
                        </div>
                        @* <div class="d-flex gap-4 text-info" style="font-size: 1.1rem;">
                            <span><i class="fa-solid fa-phone"></i></span>
                            <span><i class="fa-solid fa-video"></i></span>
                            <span><i class="fa-solid fa-circle-info"></i></span>
                        </div> *@
                    </div>
                    <ul class="list-group my-3 d-flex gap-3 overflow-auto pe-2" id="messageList"
                        style="height: 73vh; padding-top: calc(45px + 1.3rem);">
                        <li class="text-center w-100">
                            <a role="button" class="text-center btn-see-more"
                                style="font-size: .8rem; font-weight: 300;">Xem thêm</a>
                        </li>
                    </ul>
                    <div class="d-flex align-items-center gap-3 p-1">
                        @* <span class="fs-5"><i class="fa-solid fa-circle-plus text-info"></i></span>
                        <span class="fs-5"><i class="fa-regular fa-image text-info"></i></span>
                        <span class="fs-5"><i class="fa-solid fa-face-smile text-info"></i></span>
                        <span class="fs-5"><i class="bi bi-filetype-gif text-info"></i></span> *@
                        <div class="position-relative w-100 bottom-0">
                            <input type="text" class="form-control rounded-pill" placeholder="Aa" id="messageInput"
                                autocomplete="off">
                            <a role="button" class="position-absolute text-info top-50 translate-middle-y"
                                style="right: 15px;">
                                <i class="fa-regular fa-paper-plane"></i>
                            </a>
                        </div>
                    </div>
                </div>
                <div class="overlay"></div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        const recipientsContainer = $("#recipient-container");
        const searchRecipient = $("#search-recipient");
        const recipientName = $("#recipient-name");
        const recipientImage = $("#recipient-image");

        $(document).on('click', ".recipient", function (e) {
            $(".recipient").removeClass("active");
            let recipient = $(this);
            recipient.addClass("active");
            let userId = $(this).data("user-id");
            $(".overlay").hide();
            let name = recipient.find(".employer-name").text();
            let avatar = recipient.find("img").attr("src");
            recipientName.text(name);
            recipientImage.attr("src", avatar);
        });

        function loadRecipient() {
            $.ajax({
                type: "Get",
                dataType: "json",
                url: "/Notification/GetAllAppliedEmployers",
                success: function (res) {
                    if (res != null && res.length > 0) {
                        for (let i = 0; i < res.length; i++) {
                            renderRecipientContainer(res[i].jobPost, res[i].conversationId);
                        }
                    } else {
                        renderNoResult()
                    }
                },
                error: function (err) {
                    console.log(err);
                }
            });
        }

        function renderRecipientContainer(data, conversationId) {
            let recipientHtml = `
            <div>
                <a class="d-flex flex-column py-1 px-2 rounded-3 recipient" data-user-id="${data.employer.userId}" data-conversation-id="${conversationId}">
                    <div class="d-flex align-items-center gap-3">
                        <img class="rounded-pill" src="${'.' + data.employer.company.logoUrl}" alt="" style="width: 55px; height: 55px;">
                        <div class="flex-grow-1 d-sm-flex flex-column d-none">
                            <span class="fw-bold employer-name">${data.employer.fullName}</span>
                            <span style="font-size: .82rem; color: #b5564f">${data.title}</span>
                            <span style="font-size: .75rem; color: #888">${'Nhà tuyển dụng của ' + data.employer.company.companyName}</span>
                        </div>
                        <span class="text-danger mark-new-message" style="display: none; font-size: 0.7rem;"><i class="fa-solid fa-circle"></i></span>
                    </div>
                </a>
            </div>`;
            recipientsContainer.append(recipientHtml)
        }

        function renderNoResult() {
            let imgHtml = `
            <div class="d-flex flex-column justify-content-center align-items-center">
                <img src="../img/no-result-found.jpg" alt="" style="width: 200px" />
                <span class="fw-bold m-1">Bạn chưa ứng tuyển công việc nào</span>
            </div>`;
            recipientsContainer.html(imgHtml);
        }

        $(document).ready(function () {
            loadRecipient();

        });
        $(document).on("input", "#search-recipient", function () {
            let value = $(this).val().toLowerCase();
            $(".recipient").each(function () {
                let item = $(this).closest("div");
                let employerName = item.find(".employer-name").text().toLowerCase();
                if (employerName.includes(value)) {
                    item.show();
                } else {
                    item.hide();
                }
            });
        });
    </script>

    <!--SignalR-->
    <script src="~/area/assets/plugins/signalr/signalr.min.js"></script>
    <script>
        const messageList = $("#messageList");
        var recipientId = 0;
        var conversationId = 0;
        var recipientAvatarUrl = "";

        const connection = new signalR.HubConnectionBuilder()
            .withUrl("/chat")
            .configureLogging(signalR.LogLevel.Information)
            .build();

        connection.start().then(function () {
            console.log("SignalR Connected.");
        }).catch(function (err) {
            return console.error(err.toString());
        });

       connection.on("ReceiveMessage", function (result, message) {
            if (messageList.data("connect-with-user-id") == result.userId) {
                renderMessageFromRecipient(result, message);
                scrollToBottom();
            }
        });


        function sendMessageToUser() {
            var toUser = recipientId; // Người nhận
            var message = $("#messageInput").val();

            if (message == null || message == "") return;

            connection.invoke("SendMessageToUser", toUser, message).catch(function (err) {
                return console.error(err.toString());
            });
            callAjaxToSaveMessage(conversationId, message);
            renderMessageFromSender(message);
            scrollToBottom();

            $("#messageInput").val("");
        }

        function renderMessageFromSender(message) {
            var lastUser = messageList.find("li").last();
            if (lastUser.hasClass("sender-message")) {
                var createNewMessageHtml = `<p>${message}</p>`;
                let lastArea = $(".sender-message .content-container").last();
                lastArea.append(createNewMessageHtml);
            } else {
                var createNewSenderMessageHtml = `
                <li class="mt-auto d-flex gap-2 ms-auto justify-content-end sender-message">
                    <div class="d-flex flex-column align-items-end content-container">
                        <p>
                            ${message}
                        </p>
                    </div>
                </li>`;
                messageList.append(createNewSenderMessageHtml);
            }
        }

        function renderMessageFromRecipient(result, message) {
            var lastUser = messageList.find("li").last();
            if (lastUser.hasClass("recipient-message")) {
                var createNewMessageHtml = `<p>${message}</p>`;
                let lastArea = $(".recipient-message .content-container").last();
                lastArea.append(createNewMessageHtml);
            } else {
                var createNewRecipientMessageHtml = `
                <li class="mt-auto d-flex gap-2 recipient-message">
                    <img class="btn-square rounded-pill" src="${result.avatarUrl != null ? '../.' + result.avatarUrl : '../../img/default_user.png'}" alt="">
                    <div class="d-flex flex-column align-items-start content-container">
                        <p>${message}</p>
                    </div>
                </li>`;
                messageList.append(createNewRecipientMessageHtml);
            }
        }

        function scrollToBottom() {
            let container = $('#messageList');
            container.scrollTop(container[0].scrollHeight);
        }

        function callAjaxToSaveMessage(conversationId, content) {
            $.ajax({
                type: "POST",
                dataType: "json",
                data: {
                    conversationId: conversationId,
                    content: content,
                },
                cache: false,
                url: "/Message/SaveMessage",
                success: function (res) {
                    console.log(res);
                },
                error: function (err) {
                    console.log(err);
                }
            });
        }

        $(document).ready(function () {
            scrollToBottom();

            $('#messageInput').on('keydown', function (event) {
                if (event.keyCode === 13) {
                    sendMessageToUser();
                    event.preventDefault();
                }
            });

            $(document).on("click", ".recipient", function () {
                recipientId = $(this).data("user-id");
                conversationId = $(this).data("conversation-id");
                recipientAvatarUrl = $(this).find("img").attr("src");
                messageList.data("connect-with-user-id", recipientId);
                callAjaxToLoadMessages(0, conversationId, recipientId);
                messageList.html("");
            });

            function callAjaxToLoadMessages(totalMessages, conversationId, recipientId) {
                $.ajax({
                    type: "get",
                    dataType: "json",
                    data: {
                        totalMessages: totalMessages,
                        conversationId: conversationId,
                        recipientId: recipientId
                    },
                    cache: false,
                    url: "/Message/LoadMessages",
                    success: function (res) {
                        if(res!=null && res.length>0) {
                            for(let i=0; i<res.length; i++) {
                                if(recipientId == res[i].userId){
                                    let avatarUrl = recipientAvatarUrl.slice(1)
                                    let result = {
                                        avatarUrl: avatarUrl
                                    };
                                    renderMessageFromRecipient(result, res[i].content);
                                }else{
                                    renderMessageFromSender(res[i].content);
                                }
                            }
                        }  
                    },
                    error: function (err) {
                        console.log(err);
                    }
                });
            }

            $(".btn-see-more").click(function () {
                alert("See More");
            });
        });
    </script>
}