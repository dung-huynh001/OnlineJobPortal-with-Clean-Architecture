@using OnlineJobPortal.Domain.Entities
@model List<Resume>

<style>
    .btn-outline-primary {
        border: 1px solid #15a362;
        border-radius: 6px;
        background-color: #fff;
        color: #15a362;
    }

        .btn-outline-primary:hover {
            background-color: #15a362;
            color: #fff;
        }
</style>

<div class="container-fluid min-vh-100">
    <div class="row">
        <div class="col-12 h-100 mb-3">
            <div class="d-flex justify-content-between align-items-center bg-white p-3">
                <h5 class="fw-bold text-muted">Tất cả ứng viên</h5>
                <div>
                    <select class="form-select" name="" id="">
                        <option value="">Tất cả</option>
                        <option value="">Vị trí ứng tuyển</option>
                        <option value="">Học vấn</option>
                        <option value="">Kỹ năng</option>
                    </select>
                </div>
            </div>
        </div>
        @if (Model != null && Model.Count > 0)
            @foreach (var resume in Model)
            {
                <div class="col-12 col-lg-6 mb-3">
                    <div class="bg-white p-3 rounded-2">
                        <div class="d-flex align-items-start justify-content-start gap-3">
                            @{
                                var candidateAvatarUrl = resume.Candidate.AvatarUrl != null ? "../." + resume.Candidate.AvatarUrl : "../../img/default_user.png";
                            }
                            <img class="align-self-start rounded-3 flex-shrink-0" src="@candidateAvatarUrl" alt=""
                                 style="width: 100px; height: 100px;">
                            <div class="d-flex flex-column flex-grow-1">
                                <p class="mb-1 fw-bold">@resume.Candidate.FullName</p>
                                <span class="text-danger fw-bolder fs-5">@resume.Position</span>
                                <span class="text-muted">@resume.YearOfExperiences</span>

                            </div>
                            @{
                                var cvUrl = "/." + resume.CvUrl;
                            }
                            <a role="button" class="fw-bold btn btn-secondary text-white text-nowrap" onclick="window.open('@cvUrl', '_blank')">Xem CV</a>
                        </div>
                        <div class="d-flex flex-column">
                            <p class="mt-3">
                                <span class="fw-bold">Tóm tắt</span>
                                <span>"@resume.CareerGoal"</span>
                            </p>
                            <div class="d-flex gap-4">
                                <div class="flex-grow-1 d-flex flex-column">
                                    <span class="fw-bold">Kỹ năng</span>
                                    <p class="d-flex gap-3">
                                        @if (resume.CandidateSkills != null && resume.CandidateSkills.Count > 0)
                                            @foreach (var candidateSkill in resume.CandidateSkills)
                                            {
                                                <span>@candidateSkill.Skill.SkillName</span>
                                            }
                                    </p>
                                    <span class="fw-bold">Chứng chỉ</span>
                                    <p class="d-flex flex-column gap-1">
                                        @if (resume.ForeignLanguages != null && resume.ForeignLanguages.Count > 0)
                                            @foreach (var language in resume.ForeignLanguages)
                                            {
                                                <span>@language.LanguageName - @language.Degree</span>
                                            }
                                    </p>
                                </div>
                                <div class="flex-grow-1 d-flex flex-column">
                                    <span class="fw-bold">Học vấn</span>
                                    <div class="d-flex flex-column">
                                        @if (resume.Educations != null && resume.Educations.Count > 0)
                                            @foreach (var education in resume.Educations)
                                            {
                                                <span class="fst-italic" style="font-size: .8rem;">@education.StartDate.ToString("MM/yyyy") - @education.CompletionDate.ToString("MM/yyyy")</span>
                                                <span class="">@education.University</span>
                                                <span class="fst-italic">GPA @education.GPA</span>
                                            }
                                    </div>
                                </div>
                            </div>
                            <span class="fw-bold">Thông tin liên lạc</span>
                            <div class="d-flex justify-content-between mb-2">
                                <p class="mb-1 fst-italic">
                                    Điện thoại: @resume.Candidate.User.PhoneNumber
                                </p>
                                <p class="mb-1 fst-italic">
                                    Email: @resume.Candidate.User.Email
                                </p>
                            </div>
                            <div class="position-relative">
                                <div class="d-flex justify-content-around">
                                    <button class="fw-bold btn btn-info text-white btn-view-experience"
                                            data-bs-toggle="modal" data-bs-target="#experience" data-candidate-id="@resume.CandidateId" data-candidate-name="@resume.Candidate.FullName">
                                        Kinh
                                        nghiệm
                                    </button>
                                    @if(resume.Candidate.SaveCandidates!=null && resume.Candidate.SaveCandidates.Count > 0){
                                        var saveList = resume.Candidate.SaveCandidates.Select(s => s.CandidateId);
                                        if(saveList.Contains(resume.CandidateId)){
                                            <a class="fw-bold btn btn-primary text-white btn-save-candidate" data-bs-toggle="tooltip" data-bs-placement="bottom" title="Lưu ứng viên" data-candidate-id="@resume.CandidateId">
                                                <i class="fa-regular fa-heart me-2"></i> <span>Hủy Lưu</span>
                                            </a>
                                        }
                                    }else{
                                        <a class="fw-bold btn btn-outline-primary btn-save-candidate" data-bs-toggle="tooltip" data-bs-placement="bottom" title="Lưu ứng viên" data-candidate-id="@resume.CandidateId">
                                            <i class="fa-regular fa-heart me-2"></i> <span>Lưu</span>
                                        </a> 
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

            }

    </div>
</div>

<!-- Modal -->
<div class="modal fade" id="experience" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title fw-bold" id="exampleModalLabel">Ứng viên <span class="text-danger"></span></h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <span class="ps-2 fw-bold" style="border-left: 5px solid #39af79">Kinh nghiệm làm việc</span>
                <div class="experience-container"></div>
                <span class="ps-2 fw-bold" style="border-left: 5px solid #39af79">Dự án cá nhân</span>
                <div class="project-container"></div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            const experienceContainer = $('.experience-container');
            const projectContainer = $('.project-container');
            
            $(".btn-view-experience").click(function () {
                let btnViewExperience = $(this);
                let candidateId = btnViewExperience.data("candidate-id");
                let candidateName = btnViewExperience.data("candidate-name");
                $(".modal-title span").text(candidateName);
                experienceContainer.html("");
                projectContainer.html("");
                callAjaxToGetExperience(candidateId);
            });

            $(".btn-save-candidate").click(function () {
                let btnSaveCandidate = $(this);
                let candidateId = btnSaveCandidate.data("candidate-id");
                if(btnSaveCandidate.hasClass("btn-outline-primary")){
                    callAjaxToSaveCandidate(candidateId);
                    btnSaveCandidate.removeClass("btn-outline-primary");
                    btnSaveCandidate.addClass("btn-primary text-white");
                }else{
                    callAjaxToDeleteSaveCandidate(candidateId);
                    btnSaveCandidate.addClass("btn-outline-primary");
                    btnSaveCandidate.removeClass("btn-primary text-white");
                }
            });

            function callAjaxToSaveCandidate(candidateId) {
                $.ajax({
                    type: "POST",
                    dataType: "json",
                    data: { candidateId: candidateId },
                    url: "/Employer/Candidate/SaveCandidate",
                    success: function (res) {
                        if(res){
                            toastr.success("Lưu ứng viên thành công");
                        }else{
                            toastr.error("Lưu ứng viên thất bại");
                        }
                    },
                    error: function (err) {
                        console.log(err);
                    }
                });
            }

            function callAjaxToDeleteSaveCandidate(candidateId) {
                $.ajax({
                    type: "DELETE",
                    dataType: "json",
                    data: { candidateId: candidateId },
                    url: "/Employer/Candidate/DeleteSaveCandidate",
                    success: function (res) {
                        if(res){
                            toastr.warning("Bỏ theo dõi ứng viên thành công");
                        }else{
                            toastr.error("Bỏ theo dõi ứng viên thất bại");
                        }
                    },
                    error: function (err) {
                        console.log(err);
                    }
                });
            }

            function callAjaxToGetExperience(candidateId) {
                $.ajax({
                    type: "GET",
                    dataType: "json",
                    data: { candidateId: candidateId },
                    url: "/Employer/Candidate/GetResumeByCandidateId",
                    success: function (res) {
                        if(res != null) {
                            for(let i=0; i<res.experiences.length; i++) {
                                renderExperience(res.experiences[i]);
                            }
                            for(let i=0; i<res.project.length; i++){
                                renderProject(res.project[i]);
                            }
                        }
                    },
                    error: function (err) {
                        console.log(err);
                    }
                });
            }

            function renderExperience(data) {
                let experienceHtml = `
                <div class="d-flex flex-lg-row flex-column gap-3 my-3 px-2 pt-2 pb-4 border-bottom" style="font-size: 0.9rem;">
                    <div class="text-nowrap align-self-start">${formatDate(data.startDate)} - ${formatDate(data.endDate)}</div>
                    <div class="flex-grow-1">
                        <p class="mb-1">
                            <span class="text-danger fw-bold">${data.position}</span> tại <span class="fw-bold">${data.companyName}</span>
                        </p>
                        <p class="mb-1">${data.description}</p>
                        <p class="fw-bold mb-1">Kỹ năng</p>
                        <p class="d-flex flex-wrap gap-3">
                            ${data.experienceSkills.map(item => `<span>${item.skill.skillName}</span>`).join("")}
                        </p>
                        <div class="d-flex flex-wrap gap-3 my-3 experience-project-container" data-experience-project-id="">
                            ${data.experienceProjects.map(item => renderExperienceProject(item)).join("")}
                        </div>
                    </div>
                </div>`;
                experienceContainer.append(experienceHtml);
            }

            function renderExperienceProject(data) {
                let experienceProjectHtml = `
                <div class="py-1 px-2 mb-1 fw-bold w-100" style="background-color: #f5f5f5;">
                    <p class="mb-2">Dự án</p>
                    <div class="d-flex w-100 justify-content-between">
                        <span class="text-dark">${data.title}</span>
                        <span>${formatDate(data.startDate)} - ${formatDate(data.endDate)}</span>
                    </div>
                </div>`;
                return experienceProjectHtml;
            }

            function renderProject(data) {
                let projectHtml = `
                <div class="d-flex gap-3 my-3 p-2" style="font-size: 0.9rem;">
                    <div class="text-nowrap">${formatDate(data.startDate)} - ${formatDate(data.endDate)}</div>
                    <div class="flex-grow-1">
                        <p class="mb-1 fw-bold">${data.title}</p>
                        <p class="mb-1 fw-bold text-danger">${data.position}</p>
                        <p class="mb-1">${data.description}</p>
                        <p class="mb-1 fw-light">Link git:<span class="ms-2 fst-italic">${data.linkGit}</span></p>
                    </div>
                </div>`;
                projectContainer.append(projectHtml);
            }

            function formatDate(date) {
                let result = date.slice(0, 7).split('-');
                result = result.reverse().join('/');
                return result;
            }
        });
    </script>
}